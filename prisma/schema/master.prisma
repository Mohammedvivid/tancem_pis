model Analysis {
  id           String   @id @unique @default(uuid()) @db.VarChar(36)
  code         Int      @unique @default(autoincrement())
  analysisCode String   @map("analysis_code") @db.VarChar(10)
  type         String   @db.VarChar(50)
  description  String?  @db.VarChar(200)
  requestId    String?  @map("wf_request_id") @db.VarChar(36)
  materialId   String?  @map("material_id") @db.VarChar(36)
  sortOrder    Int      @default(0) @map("sort_order")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @default(now()) @updatedAt @map("updated_at")
  updatedById  String?  @map("updated_by_id") @db.VarChar(36)
  createdById  String?  @map("created_by_id") @db.VarChar(36)
  isActive     Boolean  @default(true) @map("is_active")

  // Relation (back reference)
  materialAnalyses MaterialAnalysis[]

  @@index([type])
  @@index([materialId])
  @@index([materialId, type])
  @@map("analysis")
}

model Problem {
  //? Primary Key
  id   String @id @unique @default(uuid()) @db.VarChar(36)
  //? Readable reference Key
  code Int    @unique @default(autoincrement())

  //? Columns
  name            String            @db.VarChar(50)
  description     String?           @db.VarChar(200)
  departmentId    String            @map("department_id") @db.VarChar(36)
  problemName     String            @map("problem") @db.VarChar(36)
  // ProblemCode ProblemCode[] @relation("ProblemToProblemCode")
  //? Default columns
  sortOrder       Int               @default(0) @map("sort_order")
  createdAt       DateTime          @default(now()) @map("created_at")
  updatedAt       DateTime          @default(now()) @updatedAt @map("updated_at")
  updatedById     String?           @map("updated_by_id") @db.VarChar(36)
  createdById     String?           @map("created_by_id") @db.VarChar(36)
  isActive        Boolean           @default(true) @map("is_active")
  ProblemCode     ProblemCode[]
  StoppageProblem StoppageProblem[]

  @@index([departmentId])
  @@index([code])
  //? Table name in DB
  @@map("problem")
}

model ProblemCode {
  //? Primary Key
  id String @id @unique @default(uuid()) @db.VarChar(36)

  //? Readable reference Key
  code Int @unique @default(autoincrement())

  //? Columns
  problemId     String?  @map("problem_id") @db.VarChar(36)
  ProblemMaster Problem? @relation(fields: [problemId], references: [id])
  equipmentId   String?  @map("equipment_id") @db.VarChar(36)
  departmentId  String?  @map("department_id") @db.VarChar(36)
  problemcode   Int      @map("problem_code")
  //? Default columns
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @default(now()) @updatedAt @map("updated_at")
  createdById   String?  @map("created_by_id") @db.VarChar(36)
  updatedById   String?  @map("updated_by_id") @db.VarChar(36)
  isActive      Boolean  @default(true) @map("is_active")

  //? Indexing
  // @@index([])
  @@index([code])
  @@index([problemId])
  @@index([departmentId])
  @@index([code, problemId, departmentId])
  //? Table name in DB
  @@map("problem_code")
}

model TransactionType {
  //? Primary Key
  id   String @id @unique @default(uuid())
  //? Readable reference Key
  code Int    @unique @default(autoincrement())

  //? Columns
  name        String   @db.VarChar(50)
  //? Default columns
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @default(now()) @updatedAt @map("updated_at")
  createdById String?  @map("created_by_id") @db.VarChar(36)
  updatedById String?  @map("updated_by_id") @db.VarChar(36)
  isActive    Boolean  @default(true) @map("is_active")

  //? Foreign key references

  //? Indexing
  @@index([code])
  //? Table name in DB
  @@map("transaction_type")
}

model ProductionCategory {
  //? Primary Key
  id   String @id @unique @default(uuid())
  //? Readable reference Key
  code Int    @unique @default(autoincrement())

  //? Columns
  name                String @db.VarChar(50)
  productCatagoryCode String @map("product_category_code")

  //? Default columns
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @default(now()) @updatedAt @map("updated_at")
  createdById String?  @map("created_by_id") @db.VarChar(36)
  updatedById String?  @map("updated_by_id") @db.VarChar(36)
  isActive    Boolean  @default(true) @map("is_active")

  //? Foreign key references

  //? Indexing
  @@index([code])
  @@index([productCatagoryCode])
  //? Table name in DB
  @@map("production_category")
}

model MaterialType {
  // Primary Key
  id   String @id @unique @default(uuid())
  //? Readable reference Key
  code Int    @unique @default(autoincrement())

  // Columns
  materialId           String @map("material_id") @db.VarChar(50)
  materialTypeMasterId String @map("material_type_id") @db.VarChar(36)

  // Default columns
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @default(now()) @updatedAt @map("updated_at")
  createdById String?  @map("created_by_id") @db.VarChar(36)
  updatedById String?  @map("updated_by_id") @db.VarChar(36)
  isActive    Boolean  @default(true) @map("is_active")

  // Foreign key references
  materialTypeMaster MaterialTypeMaster @relation(fields: [materialTypeMasterId], references: [id])

  // Indexing
  @@index([code])
  // Table name
  @@map("material_type")
}

model MaterialTypeMaster {
  // Primary Key
  id   String @id @unique @default(uuid())
  code Int    @unique @default(autoincrement())

  // Columns
  name             String @db.VarChar(50)
  materialTypeCode String @map("material_type_code")

  // Default columns
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @default(now()) @updatedAt @map("updated_at")
  createdById String?  @map("created_by_id") @db.VarChar(36)
  updatedById String?  @map("updated_by_id") @db.VarChar(36)
  isActive    Boolean  @default(true) @map("is_active")

  // Relation (back reference)
  materialTypes MaterialType[]

  //? Foreign key references

  // Indexing
  @@index([code])
  // Table name
  @@map("material_type_master")
}

model MaterialAnalysis {
  //? Primary Key
  id   String @id @unique @default(uuid())
  //? Readable reference Key
  code Int    @unique @default(autoincrement())

  //? Columns
  materialId       String    @map("material_id") @db.VarChar(50)
  analysisId       String    @map("analysis_id") @db.VarChar(50)
  MaterialAnalysis Analysis? @relation(fields: [analysisId], references: [id])
  //? Default columns
  createdAt        DateTime  @default(now()) @map("created_at")
  updatedAt        DateTime  @default(now()) @updatedAt @map("updated_at")
  createdById      String?   @map("created_by_id") @db.VarChar(36)
  updatedById      String?   @map("updated_by_id") @db.VarChar(36)
  isActive         Boolean   @default(true) @map("is_active")

  //? Foreign key references

  //? Indexing
  @@index([code])
  //? Table name in DB
  @@map("material_analysis")
}

model EquipmentOutputMaterialMapping {
  //? Primary Key
  id   String @id @unique @default(uuid())
  //? Readable reference Key
  code Int    @unique @default(autoincrement())

  //? Columns
  equipmentId String @map("equipment_id") @db.VarChar(36)
  materialId  String @map("material_id") @db.VarChar(36)

  //? Default columns
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @default(now()) @updatedAt @map("updated_at")
  createdById String?  @map("created_by_id") @db.VarChar(36)
  updatedById String?  @map("updated_by_id") @db.VarChar(36)
  isActive    Boolean  @default(true) @map("is_active")

  //? Foreign key references

  //? Indexing
  @@index([code])
  @@index([equipmentId])
  @@index([materialId])
  //? Table name in DB
  @@map("equipment_output_material_mapping")
}

model AnnualMaterialBudget {
  //? Primary Key
  id   String @id @unique @default(uuid())
  //? Readable reference Key
  code Int    @unique @default(autoincrement())

  //? Columns
  financialYear String @map("financial_year") @db.VarChar(9)
  month         Int
  year          Int
  materialId    String @map("material_id") @db.VarChar(36)

  //? Default columns
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @default(now()) @updatedAt @map("updated_at")
  createdById String?  @map("created_by_id") @db.VarChar(36)
  updatedById String?  @map("updated_by_id") @db.VarChar(36)
  isActive    Boolean  @default(true) @map("is_active")

  //? Foreign key references

  //? Indexing
  @@index([financialYear])
  @@index([materialId])
  @@index([code])
  //? Table name in DB
  @@map("annual_material_budget")
}

// model Power {
//   //? Primary Key
//   id   String @id @unique @default(uuid())
//   //? Readable reference Key
//   code Int    @unique @default(autoincrement())

//   //? Columns
//   transactionDate DateTime @map("transaction_date") @db.Date
//   equipmentId     String   @map("equipment_id") @db.VarChar(36)
//   units           Decimal  @map("units") @db.Decimal(7, 2)

//   //? Default columns
//   createdAt   DateTime @default(now()) @map("created_at")
//   updatedAt   DateTime @default(now()) @updatedAt @map("updated_at")
//   createdById String?  @map("created_by_id") @db.VarChar(36)
//   updatedById String?  @map("updated_by_id") @db.VarChar(36)
//   isActive    Boolean  @default(true) @map("is_active")

//   //? Foreign key references

//   //? Indexing
//   @@index([equipmentId])
//   @@index([code])
//   //? Table name in DB
//   @@map("power")
// }

model Bags {
  //? Primary Key
  id   String @id @unique @default(uuid())
  //? Readable reference Key
  code Int    @unique @default(autoincrement())

  //? Columns
  transactionDate DateTime @map("transaction_date") @db.Date
  materialId      String   @map("material_id") @db.VarChar(36)
  opc             Int      @map("opc_bags")
  ppc             Int      @map("ppc_bags")
  src             Int      @map("src_bags")
  burstopc        Int      @map("burst_opc_bags")
  burstppc        Int      @map("burst_ppc_bags")
  burstsrc        Int      @map("burst_src_bags")
  export          Int      @map("export_bags")
  deport          Int      @map("deport_bags")
  transferQty     Int      @map("transfer_to_other_plants")

  //? Default columns
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @default(now()) @updatedAt @map("updated_at")
  createdById String?  @map("created_by_id") @db.VarChar(36)
  updatedById String?  @map("updated_by_id") @db.VarChar(36)
  isActive    Boolean  @default(true) @map("is_active")

  //? Foreign key references

  //? Indexing
  @@index([materialId])
  @@index([code])
  //? Table name in DB
  @@map("bags")
}

model Stoppage {
  //? Primary Key
  id   String @id @unique @default(uuid())
  //? Readable reference Key
  code Int    @unique @default(autoincrement())

  //? Columns
  transactionDate        DateTime @map("transaction_date") @db.Date
  departmentId           String   @map("department_id") @db.VarChar(36)
  equipmentId            String   @map("equipment_id") @db.VarChar(36)
  equipmentMainId        String   @map("equipment_main_id") @db.VarChar(36)
  equipmentSubGroupId    String   @map("equipment_sub_group_id") @db.VarChar(36)
  equipmentSubSubGroupId String   @map("equipment_sub_Sub_group_id") @db.VarChar(36)

  runningHours  String? @map("running_hours") @db.VarChar(5) // HH:MM format
  stoppageHours String? @map("stoppage_hours") @db.VarChar(5)
  totalHours    String? @map("total_hours") @db.VarChar(5)

  //? Default columns
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @default(now()) @updatedAt @map("updated_at")
  createdById String?  @map("created_by_id") @db.VarChar(36)
  updatedById String?  @map("updated_by_id") @db.VarChar(36)
  isActive    Boolean  @default(true) @map("is_active")

  //? Foreign key references
  stoppageproblems StoppageProblem[]

  //? Indexing
  @@index([equipmentId])
  @@index([departmentId])
  @@index([code])
  //? Table name in DB
  @@map("stoppage")
}

model StoppageProblem {
  id            String  @id @default(uuid())
  stoppageId    String  @map("stoppage_maintenance_id") @db.VarChar(36)
  problemId     String  @map("problem_id") @db.VarChar(36)
  problemHours  String? @map("problem_hours") @db.VarChar(5) // HH:MM
  noOfStoppages Int?    @map("no_of_stoppages")
  remarks       String? @map("remarks") @db.Text

  // Relation
  stoppageFk Stoppage @relation(fields: [stoppageId], references: [id])
  ProblemFk  Problem? @relation(fields: [problemId], references: [id])

  // Default columns
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @default(now()) @updatedAt @map("updated_at")
  createdById String?  @map("created_by_id") @db.VarChar(36)
  updatedById String?  @map("updated_by_id") @db.VarChar(36)
  isActive    Boolean  @default(true) @map("is_active")

  // Indexing
  @@index([stoppageId])
  @@index([problemId])
  // Table name
  @@map("stoppage_problem")
}

model Adjustment {
  //? Primary Key
  id              String           @id @unique @default(uuid()) @db.VarChar(36)
  //? Readable reference Key
  code            Int              @unique @default(autoincrement())
  transactionType transaction_type @map("transaction_type") // enum field

  //? Columns
  toSourceId        String?          @map("to_source_id") @db.VarChar(36)
  quantity          Decimal          @map("quantity") @db.Decimal(10, 2)
  remarks           String?          @map("remarks") @db.Text
  transactionDate   DateTime         @map("transaction_date") @db.Date
  // fromSourceId String? @db.VarChar(36) @map("from_source_id")
  materialId        String?          @map("material_id") @db.VarChar(36)
  transactionTypeId String           @map("transaction_type_id") @db.VarChar(36)
  // New Enum Field
  type              transaction_type @map("type")
  //? Default columns
  createdAt         DateTime         @default(now()) @map("created_at")
  updatedAt         DateTime         @default(now()) @updatedAt @map("updated_at")
  createdById       String?          @map("created_by_id") @db.VarChar(36)
  updatedById       String?          @map("updated_by_id") @db.VarChar(36)
  isActive          Boolean          @default(true) @map("is_active")

  //? Indexing
  @@index([materialId])
  //? Table name in DB
  @@map("adjustment")
}

enum transaction_type {
  Receipts
  Despatch
  consume
}

model Equipment {
  //? Primary Key
  id   String @id @unique @default(uuid())
  //? Readable reference Key
  code Int    @unique @default(autoincrement())

  //? Columns
  equipmentId          String         @map("equipment_id") @db.VarChar(36)
  equipmentDescription String         @map("equipment_description") @db.VarChar(36)
  strength             String         @map("strength") @db.VarChar(36)
  quality              String         @map("quality") @db.VarChar(36)
  power                String         @map("power") @db.VarChar(36)
  powerGroup           String         @map("power_group") @db.VarChar(36)
  storage              String         @map("storage") @db.VarChar(36)
  orderOfAppearance    String         @map("order_of_appearance") @db.VarChar(36)
  subEquipments        SubEquipment[] // one-to-many

  //? Default columns
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @default(now()) @updatedAt @map("updated_at")
  createdById String?  @map("created_by_id") @db.VarChar(36)
  updatedById String?  @map("updated_by_id") @db.VarChar(36)
  isActive    Boolean  @default(true) @map("is_active")

  //? Foreign key references

  //? Indexing
  @@index([code])
  @@index([equipmentId])
  //? Table name in DB
  @@map("equipment")
}

model SubEquipment {
  //? Primary Key
  id   String @id @unique @default(uuid()) @db.VarChar(36)
  //? Readable reference Key
  code Int    @unique @default(autoincrement())

  //? Foreign Key
  equipment Equipment @relation(fields: [eq_id], references: [id])

  //? Columns
  subEquipmentNo          String @map("sub_equipment_id") @db.VarChar(36)
  subEquipmentDescription String @map("sub_equipment_description") @db.VarChar(36)
  equipmentSubGroupId     String @map("equipment_sub_group_id") @db.VarChar(36)
  eq_id                   String @map("eq_id") @db.VarChar(36)

  //? Default columns
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @default(now()) @updatedAt @map("updated_at")
  createdById String?  @map("created_by_id") @db.VarChar(36)
  updatedById String?  @map("updated_by_id") @db.VarChar(36)
  isActive    Boolean  @default(true) @map("is_active")

  //? Indexing
  @@index([code])
  @@index([equipmentSubGroupId])
  @@index([eq_id])
  //? Table name in DB
  @@map("sub_equipment")
}

model PowerTransaction {
  //? Primary Key
  id   String @id @unique @default(uuid())
  //? Readable reference Key
  code Int    @unique @default(autoincrement())

  //? Columns
  transactionDate DateTime @map("transaction_date") @db.Date

  //? Default columns
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @default(now()) @updatedAt @map("updated_at")
  createdById String?  @map("created_by_id") @db.VarChar(36)
  updatedById String?  @map("updated_by_id") @db.VarChar(36)
  isActive    Boolean  @default(true) @map("is_active")

  //? Relations
  powerDetails Power[]

  //? Indexing
  @@index([code])
  //? Table name in DB
  @@map("power_transaction")
}

model Power {
  //? Primary Key
  id   String @id @unique @default(uuid())
  //? Readable reference Key
  code Int    @unique @default(autoincrement())

  //? Foreign Key
  transactionId String @map("transaction_id") @db.VarChar(36)
  equipmentId   String @map("equipment_id") @db.VarChar(36)

  //? Columns
  units Decimal @map("units") @db.Decimal(7, 2)

  //? Default columns
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @default(now()) @updatedAt @map("updated_at")
  createdById String?  @map("created_by_id") @db.VarChar(36)
  updatedById String?  @map("updated_by_id") @db.VarChar(36)
  isActive    Boolean  @default(true) @map("is_active")

  //? Relations
  transaction PowerTransaction @relation(fields: [transactionId], references: [id])

  //? Indexing
  @@index([transactionId])
  @@index([equipmentId])
  @@index([code])
  //? Table name in DB
  @@map("power")
}
